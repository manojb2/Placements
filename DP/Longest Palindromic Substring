Given a string s, return the longest palindromic substring in s.

 

Example 1:

Input: s = "babad"
Output: "bab"
Note: "aba" is also a valid answer.
Example 2:

Input: s = "cbbd"
Output: "bb"
Example 3:

Input: s = "a"
Output: "a"
Example 4:

Input: s = "ac"
Output: "a"
 

Constraints:

1 <= s.length <= 1000
s consist of only digits and English letters (lower-case and/or upper-case)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


 int n = s.size();
        vector<vector<bool>> t(n, vector<bool>(n,true)); 
        string res;
        for (int i=n-1; i>=0 ;i--) {
            for (int j=i; j<n;j++) {
            
                if (i < j && s[i] == s[j])
                    t[i][j] =  t[i+1][j-1];
                if (s[i] != s[j])
                    t[i][j] = false;
                if (t[i][j] && j-i+1 > res.size())
                    res = s.substr(i, j-i+1);
            }
        }        
        return res;
