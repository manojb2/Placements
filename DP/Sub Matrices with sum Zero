Given a 2D matrix, find the number non-empty sub matrices, such that the sum of the elements inside the sub matrix is equal to 0. (note: elements might be negative).

Example:

Input

-8 5  7
3  7 -8
5 -8  9
Output
2

Explanation
-8 5 7
3 7 -8
5 -8 9

-8 5 7
3 7 -8
5 -8 9

Seen this question in a real interview before

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
int Solution::solve(vector<vector<int> > &A) {
    if(A.size()==0) return 0;
    int count=0;
    int n=A.size(),m=A[0].size();
    for(int i=0;i<n;i++){
        vector<int>dp(A[0].size(),0);
        for(int j=i;j<n;j++){
            for(int k=0;k<m;k++) dp[k]+=A[j][k];
            map<int,int>mp;
            int sum=0;
            mp[0]=1;
            for(int k=0;k<m;k++){
                sum+=dp[k];
                count+=mp[sum];
                mp[sum]++;
            }
        }
    }
    return count;
}

