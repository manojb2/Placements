Given an integer array A of size N. You have to merge all the elements of the array into one with the minimum possible cost.

The rule for merging is as follows:

Choose any two adjacent elements of the array with values say X and Y and merge them into a single element with value (X + Y) paying a total cost of (X + Y).
Return the minimum possible cost of merging all elements.



Problem Constraints
1 <= N <= 200

1 <= A[i] <= 103



Input Format
First and only argument is an integer array A of size N.



Output Format
Return an integer denoting the minimum cost of merging all elements.



Example Input
Input 1:

 A = [1, 3, 7]
Input 2:

 A = [1, 2, 3, 4]


Example Output
Output 1:

 15
Output 2:

 19


Example Explanation
Explanation 1:

 All possible ways of merging:
 a) {1, 3, 7} (cost = 0) -> {4, 7} (cost = 4) -> {11} (cost = 4+11 = 15)
 b) {1, 3, 7} (cost = 0) -> {1, 10} (cost = 10) -> {11} (cost = 10+11 = 21)
 Thus, ans = 15
 
 #############################################################################################################################################################################
 
 
 int Solution::solve(vector<int> &A) 
{
    int n = A.size();
    if(n<=1)return 0;
    int dp[n][n],sum[n][n];
    for(int i =0;i<n;i++){
        for(int j =0;j<n;j++){
            sum[i][j] =0;
            dp[i][j] =0;
        }
    }
    for(int i =0;i<n;i++){
        dp[i][i] =0;
        sum[i][i] = A[i];
    }
    
    for(int i =0;i<n-1;i++){
        dp[i][i+1] = A[i]+A[i+1];
        sum[i][i+1] = A[i]+A[i+1];
    }
    for(int i =0;i<n;i++){
    int temp = A[i];
        for(int j =i+1;j<n;j++){
            temp = temp +A[j];
            sum[i][j] = temp;
        }
        
    }
    
    
    for(int l =2;l<=n;l++)
    {
        for(int i = 0;i<n-l;i++)
        {
            dp[i][i+l]=INT_MAX;
            for(int j =i;j<i+l;j++)
            {
                dp[i][i+l] = min(dp[i][j]+sum[i][j]+dp[j+1][i+l]+sum[j+1][i+l],dp[i][i+l]);
                
            }
            //dp[i][i+l] = min(dp[i+1][i+l]+sum[i+1][i+l]+A[i],sum[i][i+l-1]+dp[i][i+l-1]+A[i+l]);
        }
        
    }
    for(int i =0;i<n;i++){
        for(int j =0;j<n;j++){
          //  cout<<sum[i][j]<<" ";
        }
        //cout<<endl;
    }
    for(int i =0;i<n;i++){
        for(int j =0;j<n;j++)
        {
          //  cout<<dp[i][j]<<" ";
            
        }   
        //cout<<endl;
    }
    return dp[0][n-1];
    
}
